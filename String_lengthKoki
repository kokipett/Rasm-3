	.global String_length

	.data
	.text

String_length:

	str	x1,	[sp, #-16]!
	str	x2,	[sp, #-16]!
	str	x19,	[sp, #-16]!
	str	x20,	[sp, #-16]!
	str	x21,	[sp, #-16]!
	str	x22,	[sp, #-16]!
	str	x23,	[sp, #-16]!
	str	x24,	[sp, #-16]!
	str	x25,	[sp, #-16]!
	str	x26,	[sp, #-16]!
	str	x27,	[sp, #-16]!
	str	x28,	[sp, #-16]!
	str	x29,	[sp, #-16]!
	str	x30,	[sp, #-16]!



	//X0 contains the address of the string
	MOV	X1, #0		//Initialize counter to loop through the string

loop:
	LDRB 	W2,[X0,x1]	//Load byte from the string in X0 and increment by 1

	//Check if there's a null terminator
	CMP	W2,#0
	BEQ	end_loop

	//Increment counter
	ADD	X1,X1,#1	//add 1 to counter
	B 	loop

end_loop:
	MOV 	X0,	X1

	str	x30,	[sp], #16
	str	x29,	[sp], #16
	str	x28,	[sp], #16
	str	x27,	[sp], #16
	str	x26,	[sp], #16
	str	x25,	[sp], #16
	str	x24,	[sp], #16
	str	x23,	[sp], #16
	str	x22,	[sp], #16
	str	x21,	[sp], #16
	str	x20,	[sp], #16
	str	x19,	[sp], #16
	str	x2,	[sp], #16
	str	x1,	[sp], #16

	RET			//return to caller
.end
